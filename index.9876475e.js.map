{"mappings":"ACGA,IAAI,EAAW,6BAAwB,CAAC,GAAG,CAAC,IAAM,MAAM,CAAc,IAAI,CAAC,IACvE,EAAQ,EACR,EAAe,CAAA,EACnB,MAAM,EAAQ,SAAS,gBAAgB,CAAC,eAClC,EAAc,SAAS,cAAc,CAAC,gBACtC,EAAW,CAAC,YAAa,aAAc,UAAW,YAAY,CAC9D,EAAU,CACd,MAAO,SAAS,cAAc,CAAC,iBAC/B,KAAM,SAAS,cAAc,CAAC,gBAC9B,OAAQ,SAAS,cAAc,CAAC,cAClC,EAGA,EAAY,gBAAgB,CAAC,QAE7B,WACE,IACA,IACA,EAAe,GACf,EAAe,GACf,EAAa,EAAU,EACzB,GAGA,MAAM,EAAY,KAChB,EAAQ,EACR,EAAe,CAAA,EACf,SAAS,aAAa,CAAC,eAAe,SAAS,CAAG,EAElD,EAAW,6BAAwB,CAAC,GAAG,CAAC,IAAM,MAAM,CAAc,IAAI,CAAC,IACvE,EAAQ,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAC7B,EAAQ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAC7B,EAEA,SAAS,EAAe,CAAa,EACnC,IAAM,EAAa,EAAE,CAUrB,GARA,EAAc,OAAO,CAAC,CAAC,EAAK,KAC1B,EAAI,OAAO,CAAC,CAAC,EAAO,KAClB,AAAU,IAAV,GAAe,EAAW,IAAI,CAAC,CAC7B,YAAA,EAAa,SAAA,CACf,EACF,EACF,GAEI,EAAW,MAAM,CAAG,EAAG,CACzB,IAAM,EAAc,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EAC1D,EAAa,CAAU,CAAC,EAAY,AAI1C,CAAA,CAAa,CAAC,EAAW,WAAW,CAAC,CAAC,EAAW,QAAQ,CAAC,CACtD,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAI,CAChC,CACF,CAEA,MAAM,EAAe,CAAC,EAAe,KACnC,EAAc,OAAO,CAAC,CAAC,EAAK,KAC1B,EAAI,OAAO,CAAC,CAAC,EAAO,KAElB,IAAM,EAAO,CAAQ,CAAC,EAAY,EAAc,MAAM,CAAG,EAAO,AAE5D,CAAA,EAAQ,GACV,EAAK,WAAW,CAAG,EACnB,EAAK,SAAS,CAAkB,CAAC,uBAAa,EAAE,EAAM,CAAC,GAEvD,EAAK,WAAW,CAAG,KACnB,EAAK,SAAS,CAAG,aAErB,EACF,EACF,EAEM,EAAe,KACnB,EAAY,SAAS,EAAI,WACzB,EAAY,SAAS,CAAG,UACxB,EAAY,KAAK,CAAG,wDACpB,EAAQ,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,SAC9B,EAGA,SAAS,gBAAgB,CAAC,QAAS,AAAA,IACjC,GAAI,CAAC,EAAS,QAAQ,CAAC,EAAE,GAAG,GAAK,EAC/B,OAIF,IAAM,EAAa,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,IAE7C,OAAQ,EAAE,GAAG,EACX,IAAK,YACH,IACA,EAAiB,GACjB,EAAe,GACf,KAEF,KAAK,aACH,IACA,EAAiB,GACjB,EAAe,GACf,KAEF,KAAK,UACH,AA2CN,CAAA,WAEE,IAAM,EAAU,EAAe,GAE/B,EAAW,EAAe,EAAQ,GAAG,CAAC,AAAA,GAAO,EAAM,IACrD,CAAA,IA/CM,EAAiB,GACjB,EAAe,GACf,KAEF,KAAK,YA8CP,IAAI,EAAA,EAAU,EAAe,GA5CzB,EAgDJ,EAAW,EAFX,EAAU,EAAQ,GAAG,CAAC,AAAA,GAAO,EAAM,EAAI,OAAO,IAAI,OAAO,MA7CrD,EAAe,EAKnB,CAEA,SAAS,aAAa,CAAC,eAAe,SAAS,CAAG,EAE9C,EAAQ,KACV,EAAe,GACf,EAAa,EAAU,GAE3B,GAEA,MAAM,EAAU,AAAC,IACf,IAAK,IAAI,EAAI,EAAG,EAhIG,EAgIe,IAChC,IAAK,IAAI,EAAI,EAAG,EAjIC,EAiIiB,IAChC,GAAI,CAAU,CAAC,EAAE,CAAC,EAAE,GAAK,CAAQ,CAAC,EAAE,CAAC,EAAE,CACrC,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,EAEM,EAAY,KAChB,EAAW,EAAS,GAAG,CAAC,AAAA,GAAO,EAAM,GACvC,EAEM,EAAa,KACjB,EAAW,EAAS,GAAG,CAAC,AAAA,GAAO,EAAM,EAAI,OAAO,IAAI,OAAO,GAC7D,EAiBM,EAAc,AAAA,GAAO,EAAI,MAAM,CAAC,SAEhC,EAAQ,AAAA,IAEZ,IAAI,EADa,EAAY,GAG7B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,MAAM,CAAG,EAAG,IACjC,CAAM,CAAC,EAAE,GAAK,CAAM,CAAC,EAAI,EAAE,GAC7B,CAAM,CAAC,EAAE,EAAI,EACb,CAAM,CAAC,EAAI,EAAE,CAAG,EAChB,GAAS,CAAM,CAAC,EAAE,EAKtB,IAFA,EAAS,EAAY,GAEd,EAAO,MAAM,CAAG,GACrB,EAAO,IAAI,CAAC,GAGd,OAAO,CACT,EAEA,SAAS,EAAe,CAAW,EACjC,OAAO,EAAY,GAAG,CAAC,CAAC,EAAK,EAAW,IAC/B,EAAI,GAAG,CAAC,CAAC,EAAG,IACV,CAAM,CAAC,EAAO,CAAC,EAAU,EAGtC,CAEA,MAAM,EAAmB,AAAC,IACxB,EAAc,OAAO,CAAC,AAAA,IACpB,EAAI,OAAO,CAAC,AAAA,IACN,GAAQ,OACV,EAAe,CAAA,EACf,EAAQ,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,UAEnC,EACF,EACF,EAEA,SAAS,IAOA,EAAS,KAAK,CAAC,AAAA,GAAO,EAAI,KAAK,CAAC,AAAA,GAAQ,AAAS,IAAT,KANvB,CAAC,AAS3B,WACE,IAAK,IAAI,EAAI,EAAG,EAtNG,EAsNe,IAChC,IAAK,IAAI,EAAI,EAAG,EAvNC,EAuNiB,IAAK,CACrC,IAAM,EAAQ,CAAQ,CAAC,EAAE,CAAC,EAAE,CAE5B,GAAI,AAAU,IAAV,IACE,EAAI,GAAK,IAAU,CAAQ,CAAC,EAAI,EAAE,CAAC,EAAE,EAIrC,EAAI,GAAK,IAAU,CAAQ,CAAC,EAAE,CAAC,EAAI,EAAE,EAHvC,MAAO,CAAA,CAOb,CAGF,MAAO,CAAA,CACT,KA1BI,EAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAElC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["var $09e991522ca7e64e$exports = {};\n\"use strict\";\nconst $09e991522ca7e64e$var$sizeAllBoxes = 4;\nlet $09e991522ca7e64e$var$allBoxes = [\n    ...Array($09e991522ca7e64e$var$sizeAllBoxes)\n].map(()=>Array($09e991522ca7e64e$var$sizeAllBoxes).fill(0));\nlet $09e991522ca7e64e$var$score = 0;\nlet $09e991522ca7e64e$var$statusWinner = false;\nconst $09e991522ca7e64e$var$boxes = document.querySelectorAll(\".field-cell\");\nconst $09e991522ca7e64e$var$startButton = document.getElementById(\"start-button\");\nconst $09e991522ca7e64e$var$needKeys = [\n    \"ArrowLeft\",\n    \"ArrowRight\",\n    \"ArrowUp\",\n    \"ArrowDown\"\n];\nconst $09e991522ca7e64e$var$message = {\n    Start: document.getElementById(\"message-start\"),\n    Lose: document.getElementById(\"message-lose\"),\n    Winner: document.getElementById(\"message-win\")\n};\n/// Стврюєм початок : Викликаєм Функцію startGame\n$09e991522ca7e64e$var$startButton.addEventListener(\"click\", $09e991522ca7e64e$var$startGame);\nfunction $09e991522ca7e64e$var$startGame() {\n    $09e991522ca7e64e$var$resetGame();\n    $09e991522ca7e64e$var$changeButton();\n    $09e991522ca7e64e$var$addRandomField($09e991522ca7e64e$var$allBoxes);\n    $09e991522ca7e64e$var$addRandomField($09e991522ca7e64e$var$allBoxes);\n    $09e991522ca7e64e$var$drawallBoxes($09e991522ca7e64e$var$allBoxes, $09e991522ca7e64e$var$boxes);\n}\n/// Це зброс гри для початку\nconst $09e991522ca7e64e$var$resetGame = ()=>{\n    $09e991522ca7e64e$var$score = 0;\n    $09e991522ca7e64e$var$statusWinner = false;\n    document.querySelector(\".game-score\").innerText = $09e991522ca7e64e$var$score;\n    /// Чи обов'язково створювати повторно allBoxes , адже Він є рядок 2\n    $09e991522ca7e64e$var$allBoxes = [\n        ...Array($09e991522ca7e64e$var$sizeAllBoxes)\n    ].map(()=>Array($09e991522ca7e64e$var$sizeAllBoxes).fill(0));\n    $09e991522ca7e64e$var$message.Winner.classList.add(\"hidden\");\n    $09e991522ca7e64e$var$message.Lose.classList.add(\"hidden\");\n};\nfunction $09e991522ca7e64e$var$addRandomField(allBoxesArray) {\n    const emptyboxes = [];\n    allBoxesArray.forEach((row, roWinnerdex)=>{\n        row.forEach((value, colIndex)=>{\n            value === 0 && emptyboxes.push({\n                roWinnerdex: roWinnerdex,\n                colIndex: colIndex\n            });\n        });\n    });\n    if (emptyboxes.length > 0) {\n        const randomIndex = Math.floor(Math.random() * emptyboxes.length);\n        const randomCell = emptyboxes[randomIndex];\n        // randomCell зберіг коп кординат,числа кординат яких фіксуєм allBoxesArray\n        allBoxesArray[randomCell.roWinnerdex][randomCell.colIndex] = Math.random() < 0.9 ? 2 : 4;\n    }\n}\nconst $09e991522ca7e64e$var$drawallBoxes = (allBoxesArray, curboxes)=>{\n    allBoxesArray.forEach((row, roWinnerd)=>{\n        row.forEach((value, colInd)=>{\n            /// Проходимось по всім клітинам\n            const cell = curboxes[roWinnerd * allBoxesArray.length + colInd];\n            if (value > 0) {\n                cell.textContent = value;\n                cell.classList = \"field-cell\" + ` field-cell--${value}`;\n            } else {\n                cell.textContent = null;\n                cell.classList = \"field-cell\";\n            }\n        });\n    });\n};\nconst $09e991522ca7e64e$var$changeButton = ()=>{\n    $09e991522ca7e64e$var$startButton.classList += \" restart\";\n    $09e991522ca7e64e$var$startButton.innerText = \"Restart\";\n    $09e991522ca7e64e$var$startButton.style = \"border: 2px solid red; color: #776e65; outline: none;\";\n    $09e991522ca7e64e$var$message.Start.classList.add(\"hidden\");\n};\n/// спрацьовує виклик при нажатті\ndocument.addEventListener(\"keyup\", (e)=>{\n    if (!$09e991522ca7e64e$var$needKeys.includes(e.key) || $09e991522ca7e64e$var$statusWinner) return;\n    /// ???\n    const copieBoxes = JSON.parse(JSON.stringify($09e991522ca7e64e$var$allBoxes));\n    switch(e.key){\n        case \"ArrowLeft\":\n            $09e991522ca7e64e$var$slideLeft();\n            $09e991522ca7e64e$var$getWinnerMessage($09e991522ca7e64e$var$allBoxes);\n            $09e991522ca7e64e$var$getLoseMessage($09e991522ca7e64e$var$allBoxes);\n            break;\n        case \"ArrowRight\":\n            $09e991522ca7e64e$var$slideRight();\n            $09e991522ca7e64e$var$getWinnerMessage($09e991522ca7e64e$var$allBoxes);\n            $09e991522ca7e64e$var$getLoseMessage($09e991522ca7e64e$var$allBoxes);\n            break;\n        case \"ArrowUp\":\n            $09e991522ca7e64e$var$slideUp();\n            $09e991522ca7e64e$var$getWinnerMessage($09e991522ca7e64e$var$allBoxes);\n            $09e991522ca7e64e$var$getLoseMessage($09e991522ca7e64e$var$allBoxes);\n            break;\n        case \"ArrowDown\":\n            $09e991522ca7e64e$var$slideDown();\n            $09e991522ca7e64e$var$getWinnerMessage($09e991522ca7e64e$var$allBoxes);\n            $09e991522ca7e64e$var$getLoseMessage($09e991522ca7e64e$var$allBoxes);\n            break;\n        default:\n            break;\n    }\n    document.querySelector(\".game-score\").innerText = $09e991522ca7e64e$var$score;\n    if ($09e991522ca7e64e$var$isMoved(copieBoxes)) {\n        $09e991522ca7e64e$var$addRandomField($09e991522ca7e64e$var$allBoxes);\n        $09e991522ca7e64e$var$drawallBoxes($09e991522ca7e64e$var$allBoxes, $09e991522ca7e64e$var$boxes);\n    }\n});\nconst $09e991522ca7e64e$var$isMoved = (copieBoxes)=>{\n    for(let r = 0; r < $09e991522ca7e64e$var$sizeAllBoxes; r++)for(let c = 0; c < $09e991522ca7e64e$var$sizeAllBoxes; c++){\n        if (copieBoxes[r][c] !== $09e991522ca7e64e$var$allBoxes[r][c]) return true;\n    }\n    return false;\n};\nconst $09e991522ca7e64e$var$slideLeft = ()=>{\n    $09e991522ca7e64e$var$allBoxes = $09e991522ca7e64e$var$allBoxes.map((row)=>$09e991522ca7e64e$var$slide(row));\n};\nconst $09e991522ca7e64e$var$slideRight = ()=>{\n    $09e991522ca7e64e$var$allBoxes = $09e991522ca7e64e$var$allBoxes.map((row)=>$09e991522ca7e64e$var$slide(row.reverse()).reverse());\n};\nfunction $09e991522ca7e64e$var$slideUp() {\n    /// Зберігаємо зміну трансформуючи рядок в колонку\n    const columns = $09e991522ca7e64e$var$prepareColumns($09e991522ca7e64e$var$allBoxes);\n    $09e991522ca7e64e$var$allBoxes = $09e991522ca7e64e$var$prepareColumns(columns.map((col)=>$09e991522ca7e64e$var$slide(col)));\n}\nfunction $09e991522ca7e64e$var$slideDown() {\n    let columns = $09e991522ca7e64e$var$prepareColumns($09e991522ca7e64e$var$allBoxes);\n    columns = columns.map((col)=>$09e991522ca7e64e$var$slide(col.reverse()).reverse());\n    $09e991522ca7e64e$var$allBoxes = $09e991522ca7e64e$var$prepareColumns(columns);\n}\nconst $09e991522ca7e64e$var$deleteZeros = (row)=>row.filter(Boolean);\nconst $09e991522ca7e64e$var$slide = (row)=>{\n    const rowClear = $09e991522ca7e64e$var$deleteZeros(row);\n    let newRow = rowClear;\n    for(let i = 0; i < newRow.length - 1; i++)if (newRow[i] === newRow[i + 1]) {\n        newRow[i] *= 2;\n        newRow[i + 1] = 0;\n        $09e991522ca7e64e$var$score += newRow[i];\n    }\n    newRow = $09e991522ca7e64e$var$deleteZeros(newRow);\n    while(newRow.length < 4)newRow.push(0);\n    return newRow;\n};\nfunction $09e991522ca7e64e$var$prepareColumns(allBoxesArr) {\n    return allBoxesArr.map((row, roWinnerd, rowArr)=>{\n        return row.map((_, colInd)=>{\n            return rowArr[colInd][roWinnerd];\n        });\n    });\n}\nconst $09e991522ca7e64e$var$getWinnerMessage = (allBoxesArray)=>{\n    allBoxesArray.forEach((row)=>{\n        row.forEach((cell)=>{\n            if (cell >= 2048) {\n                $09e991522ca7e64e$var$statusWinner = true;\n                $09e991522ca7e64e$var$message.Start.classList.remove(\"hidden\");\n            }\n        });\n    });\n};\nfunction $09e991522ca7e64e$var$getLoseMessage() {\n    if ($09e991522ca7e64e$var$isallBoxesFull() && !$09e991522ca7e64e$var$canMakeMove()) $09e991522ca7e64e$var$message.Lose.classList.remove(\"hidden\");\n}\nfunction $09e991522ca7e64e$var$isallBoxesFull() {\n    return $09e991522ca7e64e$var$allBoxes.every((row)=>row.every((tile)=>tile !== 0));\n}\nfunction $09e991522ca7e64e$var$canMakeMove() {\n    for(let r = 0; r < $09e991522ca7e64e$var$sizeAllBoxes; r++)for(let c = 0; c < $09e991522ca7e64e$var$sizeAllBoxes; c++){\n        const value = $09e991522ca7e64e$var$allBoxes[r][c];\n        if (value !== 0) {\n            if (r < 3 && value === $09e991522ca7e64e$var$allBoxes[r + 1][c]) return true;\n            if (c < 3 && value === $09e991522ca7e64e$var$allBoxes[r][c + 1]) return true;\n        }\n    }\n    return false;\n}\n\n\n//# sourceMappingURL=index.9876475e.js.map\n","'use strict';\n\nconst sizeAllBoxes = 4;\nlet allBoxes = [...Array(sizeAllBoxes)].map(() => Array(sizeAllBoxes).fill(0));\nlet score = 0;\nlet statusWinner = false;\nconst boxes = document.querySelectorAll('.field-cell');\nconst startButton = document.getElementById('start-button');\nconst needKeys = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'];\nconst message = {\n  Start: document.getElementById('message-start'),\n  Lose: document.getElementById('message-lose'),\n  Winner: document.getElementById('message-win'),\n};\n/// Стврюєм початок : Викликаєм Функцію startGame\n\nstartButton.addEventListener('click', startGame);\n\nfunction startGame() {\n  resetGame();\n  changeButton();\n  addRandomField(allBoxes);\n  addRandomField(allBoxes);\n  drawallBoxes(allBoxes, boxes);\n}\n/// Це зброс гри для початку\n\nconst resetGame = () => {\n  score = 0;\n  statusWinner = false;\n  document.querySelector('.game-score').innerText = score;\n  /// Чи обов'язково створювати повторно allBoxes , адже Він є рядок 2\n  allBoxes = [...Array(sizeAllBoxes)].map(() => Array(sizeAllBoxes).fill(0));\n  message.Winner.classList.add('hidden');\n  message.Lose.classList.add('hidden');\n};\n\nfunction addRandomField(allBoxesArray) {\n  const emptyboxes = [];\n\n  allBoxesArray.forEach((row, roWinnerdex) => {\n    row.forEach((value, colIndex) => {\n      value === 0 && emptyboxes.push({\n        roWinnerdex, colIndex,\n      });\n    });\n  });\n\n  if (emptyboxes.length > 0) {\n    const randomIndex = Math.floor(Math.random() * emptyboxes.length);\n    const randomCell = emptyboxes[randomIndex];\n\n    // randomCell зберіг коп кординат,числа кординат яких фіксуєм allBoxesArray\n\n    allBoxesArray[randomCell.roWinnerdex][randomCell.colIndex]\n      = Math.random() < 0.9 ? 2 : 4;\n  }\n}\n\nconst drawallBoxes = (allBoxesArray, curboxes) => {\n  allBoxesArray.forEach((row, roWinnerd) => {\n    row.forEach((value, colInd) => {\n      /// Проходимось по всім клітинам\n      const cell = curboxes[roWinnerd * allBoxesArray.length + colInd];\n\n      if (value > 0) {\n        cell.textContent = value;\n        cell.classList = 'field-cell' + ` field-cell--${value}`;\n      } else {\n        cell.textContent = null;\n        cell.classList = 'field-cell';\n      }\n    });\n  });\n};\n\nconst changeButton = () => {\n  startButton.classList += ' restart';\n  startButton.innerText = 'Restart';\n  startButton.style = 'border: 2px solid red; color: #776e65; outline: none;';\n  message.Start.classList.add('hidden');\n};\n/// спрацьовує виклик при нажатті\n\ndocument.addEventListener('keyup', e => {\n  if (!needKeys.includes(e.key) || statusWinner) {\n    return;\n  }\n  /// ???\n\n  const copieBoxes = JSON.parse(JSON.stringify(allBoxes));\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      slideLeft();\n      getWinnerMessage(allBoxes);\n      getLoseMessage(allBoxes);\n      break;\n\n    case 'ArrowRight':\n      slideRight();\n      getWinnerMessage(allBoxes);\n      getLoseMessage(allBoxes);\n      break;\n\n    case 'ArrowUp':\n      slideUp();\n      getWinnerMessage(allBoxes);\n      getLoseMessage(allBoxes);\n      break;\n\n    case 'ArrowDown':\n      slideDown();\n      getWinnerMessage(allBoxes);\n      getLoseMessage(allBoxes);\n      break;\n\n    default:\n      break;\n  }\n\n  document.querySelector('.game-score').innerText = score;\n\n  if (isMoved(copieBoxes)) {\n    addRandomField(allBoxes);\n    drawallBoxes(allBoxes, boxes);\n  }\n});\n\nconst isMoved = (copieBoxes) => {\n  for (let r = 0; r < sizeAllBoxes; r++) {\n    for (let c = 0; c < sizeAllBoxes; c++) {\n      if (copieBoxes[r][c] !== allBoxes[r][c]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nconst slideLeft = () => {\n  allBoxes = allBoxes.map(row => slide(row));\n};\n\nconst slideRight = () => {\n  allBoxes = allBoxes.map(row => slide(row.reverse()).reverse());\n};\n\nfunction slideUp() {\n  /// Зберігаємо зміну трансформуючи рядок в колонку\n  const columns = prepareColumns(allBoxes);\n\n  allBoxes = prepareColumns(columns.map(col => slide(col)));\n}\n\nfunction slideDown() {\n  let columns = prepareColumns(allBoxes);\n\n  columns = columns.map(col => slide(col.reverse()).reverse());\n\n  allBoxes = prepareColumns(columns);\n};\n\nconst deleteZeros = row => row.filter(Boolean);\n\nconst slide = row => {\n  const rowClear = deleteZeros(row);\n  let newRow = rowClear;\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      score += newRow[i];\n    }\n  }\n  newRow = deleteZeros(newRow);\n\n  while (newRow.length < 4) {\n    newRow.push(0);\n  }\n\n  return newRow;\n};\n\nfunction prepareColumns(allBoxesArr) {\n  return allBoxesArr.map((row, roWinnerd, rowArr) => {\n    return row.map((_, colInd) => {\n      return rowArr[colInd][roWinnerd];\n    });\n  });\n}\n\nconst getWinnerMessage = (allBoxesArray) => {\n  allBoxesArray.forEach(row => {\n    row.forEach(cell => {\n      if (cell >= 2048) {\n        statusWinner = true;\n        message.Start.classList.remove('hidden');\n      }\n    });\n  });\n};\n\nfunction getLoseMessage() {\n  if (isallBoxesFull() && !canMakeMove()) {\n    message.Lose.classList.remove('hidden');\n  }\n};\n\nfunction isallBoxesFull() {\n  return allBoxes.every(row => row.every(tile => tile !== 0));\n}\n\nfunction canMakeMove() {\n  for (let r = 0; r < sizeAllBoxes; r++) {\n    for (let c = 0; c < sizeAllBoxes; c++) {\n      const value = allBoxes[r][c];\n\n      if (value !== 0) {\n        if (r < 3 && value === allBoxes[r + 1][c]) {\n          return true;\n        };\n\n        if (c < 3 && value === allBoxes[r][c + 1]) {\n          return true;\n        };\n      }\n    }\n  }\n\n  return false;\n}\n"],"names":["$09e991522ca7e64e$var$allBoxes","map","Array","fill","$09e991522ca7e64e$var$score","$09e991522ca7e64e$var$statusWinner","$09e991522ca7e64e$var$boxes","document","querySelectorAll","$09e991522ca7e64e$var$startButton","getElementById","$09e991522ca7e64e$var$needKeys","$09e991522ca7e64e$var$message","Start","Lose","Winner","addEventListener","$09e991522ca7e64e$var$resetGame","$09e991522ca7e64e$var$changeButton","$09e991522ca7e64e$var$addRandomField","$09e991522ca7e64e$var$drawallBoxes","querySelector","innerText","classList","add","allBoxesArray","emptyboxes","forEach","row","roWinnerdex","value","colIndex","push","length","randomIndex","Math","floor","random","randomCell","curboxes","roWinnerd","colInd","cell","textContent","style","e","includes","key","copieBoxes","JSON","parse","stringify","$09e991522ca7e64e$var$slideLeft","$09e991522ca7e64e$var$getWinnerMessage","$09e991522ca7e64e$var$getLoseMessage","$09e991522ca7e64e$var$slideRight","$09e991522ca7e64e$var$slideUp","columns","$09e991522ca7e64e$var$prepareColumns","col","$09e991522ca7e64e$var$slide","reverse","$09e991522ca7e64e$var$isMoved","r","c","$09e991522ca7e64e$var$deleteZeros","filter","Boolean","newRow","i","allBoxesArr","rowArr","_","remove","every","tile","$09e991522ca7e64e$var$canMakeMove"],"version":3,"file":"index.9876475e.js.map"}